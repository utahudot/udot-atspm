#region license
// Copyright 2025 Utah Departement of Transportation
// for SqlLiteDatabaseProvider - Utah.Udot.ATSPM.SqlLiteDatabaseProvider.Migrations.Aggregation/AggregationContextModelSnapshot.cs
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
#endregion

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Utah.Udot.Atspm.Data;

#nullable disable

namespace Utah.Udot.ATSPM.SqlLiteDatabaseProvider.Migrations.Aggregation
{
    [DbContext(typeof(AggregationContext))]
    partial class AggregationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("Utah.Udot.Atspm.Data.Models.CompressedAggregationBase", b =>
                {
                    b.Property<string>("LocationIdentifier")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ArchiveDate")
                        .HasColumnType("Date");

                    b.Property<string>("DataType")
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Start")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("End")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Data")
                        .HasColumnType("BLOB");

                    b.HasKey("LocationIdentifier", "ArchiveDate", "DataType", "Start", "End");

                    b.ToTable("CompressedAggregations", t =>
                        {
                            t.HasComment("Compressed aggregations");
                        });

                    b.HasDiscriminator<string>("DataType");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Utah.Udot.Atspm.Data.Models.CompressedAggregations<Utah.Udot.Atspm.Data.Models.ApproachPcdAggregation>", b =>
                {
                    b.HasBaseType("Utah.Udot.Atspm.Data.Models.CompressedAggregationBase");

                    b.HasDiscriminator().HasValue("ApproachPcdAggregation");
                });

            modelBuilder.Entity("Utah.Udot.Atspm.Data.Models.CompressedAggregations<Utah.Udot.Atspm.Data.Models.ApproachSpeedAggregation>", b =>
                {
                    b.HasBaseType("Utah.Udot.Atspm.Data.Models.CompressedAggregationBase");

                    b.HasDiscriminator().HasValue("ApproachSpeedAggregation");
                });

            modelBuilder.Entity("Utah.Udot.Atspm.Data.Models.CompressedAggregations<Utah.Udot.Atspm.Data.Models.ApproachSplitFailAggregation>", b =>
                {
                    b.HasBaseType("Utah.Udot.Atspm.Data.Models.CompressedAggregationBase");

                    b.HasDiscriminator().HasValue("ApproachSplitFailAggregation");
                });

            modelBuilder.Entity("Utah.Udot.Atspm.Data.Models.CompressedAggregations<Utah.Udot.Atspm.Data.Models.ApproachYellowRedActivationAggregation>", b =>
                {
                    b.HasBaseType("Utah.Udot.Atspm.Data.Models.CompressedAggregationBase");

                    b.HasDiscriminator().HasValue("ApproachYellowRedActivationAggregation");
                });

            modelBuilder.Entity("Utah.Udot.Atspm.Data.Models.CompressedAggregations<Utah.Udot.Atspm.Data.Models.DetectorEventCountAggregation>", b =>
                {
                    b.HasBaseType("Utah.Udot.Atspm.Data.Models.CompressedAggregationBase");

                    b.HasDiscriminator().HasValue("DetectorEventCountAggregation");
                });

            modelBuilder.Entity("Utah.Udot.Atspm.Data.Models.CompressedAggregations<Utah.Udot.Atspm.Data.Models.PhaseCycleAggregation>", b =>
                {
                    b.HasBaseType("Utah.Udot.Atspm.Data.Models.CompressedAggregationBase");

                    b.HasDiscriminator().HasValue("PhaseCycleAggregation");
                });

            modelBuilder.Entity("Utah.Udot.Atspm.Data.Models.CompressedAggregations<Utah.Udot.Atspm.Data.Models.PhaseLeftTurnGapAggregation>", b =>
                {
                    b.HasBaseType("Utah.Udot.Atspm.Data.Models.CompressedAggregationBase");

                    b.HasDiscriminator().HasValue("PhaseLeftTurnGapAggregation");
                });

            modelBuilder.Entity("Utah.Udot.Atspm.Data.Models.CompressedAggregations<Utah.Udot.Atspm.Data.Models.PhasePedAggregation>", b =>
                {
                    b.HasBaseType("Utah.Udot.Atspm.Data.Models.CompressedAggregationBase");

                    b.HasDiscriminator().HasValue("PhasePedAggregation");
                });

            modelBuilder.Entity("Utah.Udot.Atspm.Data.Models.CompressedAggregations<Utah.Udot.Atspm.Data.Models.PhaseSplitMonitorAggregation>", b =>
                {
                    b.HasBaseType("Utah.Udot.Atspm.Data.Models.CompressedAggregationBase");

                    b.HasDiscriminator().HasValue("PhaseSplitMonitorAggregation");
                });

            modelBuilder.Entity("Utah.Udot.Atspm.Data.Models.CompressedAggregations<Utah.Udot.Atspm.Data.Models.PhaseTerminationAggregation>", b =>
                {
                    b.HasBaseType("Utah.Udot.Atspm.Data.Models.CompressedAggregationBase");

                    b.HasDiscriminator().HasValue("PhaseTerminationAggregation");
                });

            modelBuilder.Entity("Utah.Udot.Atspm.Data.Models.CompressedAggregations<Utah.Udot.Atspm.Data.Models.PreemptionAggregation>", b =>
                {
                    b.HasBaseType("Utah.Udot.Atspm.Data.Models.CompressedAggregationBase");

                    b.HasDiscriminator().HasValue("PreemptionAggregation");
                });

            modelBuilder.Entity("Utah.Udot.Atspm.Data.Models.CompressedAggregations<Utah.Udot.Atspm.Data.Models.PriorityAggregation>", b =>
                {
                    b.HasBaseType("Utah.Udot.Atspm.Data.Models.CompressedAggregationBase");

                    b.HasDiscriminator().HasValue("PriorityAggregation");
                });

            modelBuilder.Entity("Utah.Udot.Atspm.Data.Models.CompressedAggregations<Utah.Udot.Atspm.Data.Models.SignalEventCountAggregation>", b =>
                {
                    b.HasBaseType("Utah.Udot.Atspm.Data.Models.CompressedAggregationBase");

                    b.HasDiscriminator().HasValue("SignalEventCountAggregation");
                });

            modelBuilder.Entity("Utah.Udot.Atspm.Data.Models.CompressedAggregations<Utah.Udot.Atspm.Data.Models.SignalPlanAggregation>", b =>
                {
                    b.HasBaseType("Utah.Udot.Atspm.Data.Models.CompressedAggregationBase");

                    b.HasDiscriminator().HasValue("SignalPlanAggregation");
                });
#pragma warning restore 612, 618
        }
    }
}
