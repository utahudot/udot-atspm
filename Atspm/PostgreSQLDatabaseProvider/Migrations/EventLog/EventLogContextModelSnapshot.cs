#region license
// Copyright 2025 Utah Departement of Transportation
// for PostgreSQLDatabaseProvider - Utah.Udot.ATSPM.PostgreSQLDatabaseProvider.Migrations.EventLog/EventLogContextModelSnapshot.cs
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
#endregion

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Utah.Udot.Atspm.Data;

#nullable disable

namespace Utah.Udot.ATSPM.PostgreSQLDatabaseProvider.Migrations.EventLog
{
    [DbContext(typeof(EventLogContext))]
    partial class EventLogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Utah.Udot.Atspm.Data.Models.CompressedEventLogBase", b =>
                {
                    b.Property<string>("LocationIdentifier")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("DeviceId")
                        .HasColumnType("integer");

                    b.Property<string>("DataType")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("ArchiveDate")
                        .HasColumnType("Date");

                    b.Property<byte[]>("Data")
                        .HasColumnType("bytea");

                    b.HasKey("LocationIdentifier", "DeviceId", "DataType", "Start", "End");

                    b.ToTable("CompressedEvents", t =>
                        {
                            t.HasComment("Compressed device data log events");
                        });

                    b.HasDiscriminator<string>("DataType");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Utah.Udot.Atspm.Data.Models.CompressedEventLogs<Utah.Udot.Atspm.Data.Models.EventLogModels.IndianaEvent>", b =>
                {
                    b.HasBaseType("Utah.Udot.Atspm.Data.Models.CompressedEventLogBase");

                    b.HasDiscriminator().HasValue("IndianaEvent");
                });

            modelBuilder.Entity("Utah.Udot.Atspm.Data.Models.CompressedEventLogs<Utah.Udot.Atspm.Data.Models.EventLogModels.PedestrianCounter>", b =>
                {
                    b.HasBaseType("Utah.Udot.Atspm.Data.Models.CompressedEventLogBase");

                    b.HasDiscriminator().HasValue("PedestrianCounter");
                });

            modelBuilder.Entity("Utah.Udot.Atspm.Data.Models.CompressedEventLogs<Utah.Udot.Atspm.Data.Models.EventLogModels.SpeedEvent>", b =>
                {
                    b.HasBaseType("Utah.Udot.Atspm.Data.Models.CompressedEventLogBase");

                    b.HasDiscriminator().HasValue("SpeedEvent");
                });
#pragma warning restore 612, 618
        }
    }
}
