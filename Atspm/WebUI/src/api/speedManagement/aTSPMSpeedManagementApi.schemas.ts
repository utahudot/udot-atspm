/**
 * Generated by orval v6.23.0 üç∫
 * Do not edit manually.
 * ATSPM Speed Management Api
 * ATSPM Log Data with OpenAPI, Swashbuckle, and API versioning.
 * OpenAPI spec version: 1.0
 */
export type PostSpeedOverTimeGetReportDataParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type PostSpeedOverDistanceGetReportDataParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type PostSpeedManagementGetHistoricalSpeedsParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type GetRouteSpeedsParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type PostApiSpeedFromImpactSegmentSegmentIdParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type PostApiSpeedFromImpactImpactImpactIdParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type PostApiSegmentSegmentIdSpeedsParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type PostApiSegmentSpeedsParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type GetApiSegmentSegmentIdParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type PostApiSegmentParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type GetApiSegmentParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type GetRegionParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type GetApiMonthlyAggregationSegmentsSegmentIdParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type PostApiMonthlyAggregationSegmentParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type DeleteApiMonthlyAggregationParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type PostApiMonthlyAggregationParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type DeleteApiImpactTypeIdParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type PutApiImpactTypeIdParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type GetApiImpactTypeIdParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type PostApiImpactTypeParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type GetApiImpactTypeParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type DeleteApiImpactIdImpactTypeImpactTypeIdParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type PutApiImpactIdImpactTypeImpactTypeIdParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type DeleteApiImpactIdSegmentsSegmentIdParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type PutApiImpactIdSegmentsSegmentIdParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type DeleteApiImpactIdParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type PutApiImpactIdParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type GetApiImpactIdParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type PostApiImpactParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type GetApiImpactParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type GetFunctionalTypeParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type GetCountyParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type PostCongestionTrackingGetReportDataParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type GetCityParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type GetAccessCategoryParams = {
/**
 * The requested API version
 */
'api-version'?: string;
};

export type TimeOptionsEnum = typeof TimeOptionsEnum[keyof typeof TimeOptionsEnum];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const TimeOptionsEnum = {
  NUMBER_0: 0,
  NUMBER_1: 1,
  NUMBER_2: 2,
} as const;

export interface SpeedOverTimeOptions {
  endDate?: string;
  endTime?: string | null;
  segmentId?: string | null;
  sourceId?: number;
  startDate?: string;
  startTime?: string | null;
  timeOptions?: TimeOptionsEnum;
}

export interface SpeedOverTimeDto {
  data?: SpeedDataDto[] | null;
  endDate?: string;
  endingMilePoint?: number;
  segmentId?: string;
  segmentName?: string | null;
  speedLimit?: number;
  startDate?: string;
  startingMilePoint?: number;
  timeOptions?: TimeOptionsEnum;
}

export interface SpeedOverDistanceOptions {
  endDate?: string;
  segmentIds?: string[] | null;
  startDate?: string;
}

export interface SpeedOverDistanceDto {
  average?: number;
  eightyFifth?: number;
  endDate?: string;
  endingMilePoint?: number;
  segmentId?: string;
  segmentName?: string | null;
  speedLimit?: number;
  startDate?: string;
  startingMilePoint?: number;
}

export interface SpeedDataDto {
  date?: string;
  series?: AverageAndEightyFifthSeriesData;
}

export interface SegmentRequestDto {
  endDate?: string;
  segmentIds?: string[] | null;
  startDate?: string;
}

export interface Segment {
  accessCategory?: string | null;
  alternateIdentifier?: string | null;
  city?: string | null;
  county?: string | null;
  direction?: string | null;
  endMilePoint?: number;
  functionalType?: string | null;
  id?: string;
  name?: string | null;
  offset?: number | null;
  region?: string | null;
  routeEntities?: SegmentEntity[] | null;
  shape?: Geometry;
  shapeWKT?: string | null;
  speedLimit?: number;
  startMilePoint?: number;
  udotRouteNumber?: string | null;
}

export interface SegmentEntity {
  entityId?: number;
  entityType?: string | null;
  length?: number;
  segment?: Segment;
  segmentId?: string;
  sourceId?: number;
}

export interface RouteSpeedOptions {
  accessCategory?: string | null;
  city?: string | null;
  county?: string | null;
  daysOfWeek?: DayOfWeek[] | null;
  endDate?: string;
  endTime?: string;
  functionalType?: string | null;
  region?: string | null;
  sourceId?: number;
  startDate?: string;
  startTime?: string;
  violationThreshold?: number;
}

export interface ProblemDetails {
  detail?: string | null;
  instance?: string | null;
  status?: number | null;
  title?: string | null;
  type?: string | null;
  [key: string]: unknown;
}

export type PrecisionModels = typeof PrecisionModels[keyof typeof PrecisionModels];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PrecisionModels = {
  NUMBER_0: 0,
  NUMBER_1: 1,
  NUMBER_2: 2,
} as const;

export interface PrecisionModel {
  readonly gridSize?: number;
  readonly isFloating?: boolean;
  readonly maximumSignificantDigits?: number;
  precisionModelType?: PrecisionModels;
  scale?: number;
}

export type PointUserData = unknown | null;

export type Ordinates = typeof Ordinates[keyof typeof Ordinates];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const Ordinates = {
  NUMBER_0: 0,
  NUMBER_1: 1,
  NUMBER_2: 2,
  NUMBER_3: 3,
  NUMBER_4: 4,
  NUMBER_7: 7,
  NUMBER_8: 8,
  NUMBER_16: 16,
  NUMBER_32: 32,
  NUMBER_64: 64,
  NUMBER_128: 128,
  NUMBER_256: 256,
  NUMBER_512: 512,
  NUMBER_1024: 1024,
  NUMBER_2048: 2048,
  NUMBER_4096: 4096,
  NUMBER_8192: 8192,
  NUMBER_16384: 16384,
  NUMBER_32768: 32768,
  NUMBER_65535: 65535,
  NUMBER_65536: 65536,
  NUMBER_65539: 65539,
  NUMBER_65543: 65543,
  NUMBER_131072: 131072,
  NUMBER_262144: 262144,
  NUMBER_524288: 524288,
  NUMBER_1048576: 1048576,
  NUMBER_2097152: 2097152,
  NUMBER_4194304: 4194304,
  NUMBER_8388608: 8388608,
  NUMBER_16777216: 16777216,
  NUMBER_33554432: 33554432,
  NUMBER_67108864: 67108864,
  NUMBER_134217728: 134217728,
  NUMBER_268435456: 268435456,
  NUMBER_536870912: 536870912,
  NUMBER_1073741824: 1073741824,
  NUMBER_MINUS_2147483648: -2147483648,
  NUMBER_MINUS_65536: -65536,
  NUMBER_MINUS_1: -1,
} as const;

export type OgcGeometryType = typeof OgcGeometryType[keyof typeof OgcGeometryType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OgcGeometryType = {
  NUMBER_1: 1,
  NUMBER_2: 2,
  NUMBER_3: 3,
  NUMBER_4: 4,
  NUMBER_5: 5,
  NUMBER_6: 6,
  NUMBER_7: 7,
  NUMBER_8: 8,
  NUMBER_9: 9,
  NUMBER_10: 10,
  NUMBER_11: 11,
  NUMBER_12: 12,
  NUMBER_13: 13,
  NUMBER_14: 14,
  NUMBER_15: 15,
  NUMBER_16: 16,
} as const;

export interface NtsGeometryServices {
  coordinateEqualityComparer?: CoordinateEqualityComparer;
  defaultCoordinateSequenceFactory?: CoordinateSequenceFactory;
  defaultPrecisionModel?: PrecisionModel;
  readonly defaultSRID?: number;
  geometryOverlay?: GeometryOverlay;
}

export interface NameAndIdDto {
  id?: string;
  name?: string | null;
}

export interface MonthlyAggregation {
  allDayAverageEightyFifthSpeed?: number | null;
  allDayAverageSpeed?: number | null;
  allDayExtremeViolations?: number | null;
  allDayViolations?: number | null;
  amPeakAverageEightyFifthSpeed?: number | null;
  amPeakAverageSpeed?: number | null;
  amPeakExtremeViolations?: number | null;
  amPeakViolations?: number | null;
  binStartTime?: string;
  createdDate?: string | null;
  dataQuality?: boolean;
  earlyMorningAverageEightyFifthSpeed?: number | null;
  earlyMorningAverageSpeed?: number | null;
  earlyMorningExtremeViolations?: number | null;
  earlyMorningViolations?: number | null;
  eveningAverageEightyFifthSpeed?: number | null;
  eveningAverageSpeed?: number | null;
  eveningExtremeViolations?: number | null;
  eveningViolations?: number | null;
  id?: string | null;
  midDayAverageEightyFifthSpeed?: number | null;
  midDayAverageSpeed?: number | null;
  midDayExtremeViolations?: number | null;
  midDayViolations?: number | null;
  offPeakAverageEightyFifthSpeed?: number | null;
  offPeakAverageSpeed?: number | null;
  offPeakExtremeViolations?: number | null;
  offPeakViolations?: number | null;
  pmPeakAverageEightyFifthSpeed?: number | null;
  pmPeakAverageSpeed?: number | null;
  pmPeakExtremeViolations?: number | null;
  pmPeakViolations?: number | null;
  segmentId?: string;
  sourceId?: number;
}

export interface Int64DataPoint {
  timestamp?: string;
  value?: number;
}

export interface ImpactType {
  description?: string | null;
  id?: string | null;
  name?: string | null;
}

export interface Impact {
  createdBy?: string | null;
  createdOn?: string | null;
  deletedBy?: string | null;
  deletedOn?: string | null;
  description?: string | null;
  end?: string | null;
  endMile?: number;
  id?: string | null;
  impactTypeIds?: string[] | null;
  impactTypes?: ImpactType[] | null;
  segmentIds?: string[] | null;
  start?: string;
  startMile?: number;
  updatedBy?: string | null;
  updatedOn?: string | null;
}

export interface HourlySpeed {
  average?: number;
  binStartTime?: string;
  confidenceId?: number;
  date?: string;
  eightyFifthSpeed?: number | null;
  extremeViolation?: number | null;
  fifteenthSpeed?: number | null;
  flow?: number | null;
  ninetyFifthSpeed?: number | null;
  ninetyNinthSpeed?: number | null;
  segmentId?: string;
  sourceId?: number;
  violation?: number | null;
}

export interface SpeedFromImpactDto {
  endDate?: string;
  hourlySpeeds?: HourlySpeed[] | null;
  impacts?: Impact[] | null;
  segments?: Segment[] | null;
  startDate?: string;
}

export interface HistoricalSpeedOptions {
  daysOfWeek?: DayOfWeek[] | null;
  endDate?: string;
  segmentId?: string;
  startDate?: string;
}

export interface GeometryOverlay { [key: string]: any }

export type GeometryUserData = unknown | null;

export interface Envelope {
  readonly area?: number;
  centre?: Coordinate;
  readonly diameter?: number;
  readonly height?: number;
  readonly isNull?: boolean;
  readonly maxExtent?: number;
  readonly maxX?: number;
  readonly maxY?: number;
  readonly minExtent?: number;
  readonly minX?: number;
  readonly minY?: number;
  readonly width?: number;
}

export interface DoubleDataPoint {
  timestamp?: string;
  value?: number;
}

export type Dimension = typeof Dimension[keyof typeof Dimension];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const Dimension = {
  NUMBER_0: 0,
  NUMBER_1: 1,
  NUMBER_2: 2,
  NUMBER_3: 3,
  NUMBER_MINUS_3: -3,
  NUMBER_MINUS_2: -2,
  NUMBER_MINUS_1: -1,
} as const;

export interface Geometry {
  readonly area?: number;
  boundary?: Geometry;
  boundaryDimension?: Dimension;
  centroid?: Point;
  coordinate?: Coordinate;
  readonly coordinates?: readonly Coordinate[] | null;
  dimension?: Dimension;
  envelope?: Geometry;
  envelopeInternal?: Envelope;
  factory?: GeometryFactory;
  readonly geometryType?: string | null;
  interiorPoint?: Point;
  readonly isEmpty?: boolean;
  readonly isRectangle?: boolean;
  readonly isSimple?: boolean;
  readonly isValid?: boolean;
  readonly length?: number;
  readonly numGeometries?: number;
  readonly numPoints?: number;
  ogcGeometryType?: OgcGeometryType;
  pointOnSurface?: Point;
  precisionModel?: PrecisionModel;
  srid?: number;
  userData?: GeometryUserData;
}

export type DayOfWeek = typeof DayOfWeek[keyof typeof DayOfWeek];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DayOfWeek = {
  NUMBER_0: 0,
  NUMBER_1: 1,
  NUMBER_2: 2,
  NUMBER_3: 3,
  NUMBER_4: 4,
  NUMBER_5: 5,
  NUMBER_6: 6,
} as const;

export interface CoordinateSequenceFactory {
  ordinates?: Ordinates;
}

export interface GeometryFactory {
  coordinateSequenceFactory?: CoordinateSequenceFactory;
  geometryServices?: NtsGeometryServices;
  precisionModel?: PrecisionModel;
  readonly srid?: number;
}

export interface CoordinateSequence {
  readonly count?: number;
  readonly dimension?: number;
  first?: Coordinate;
  readonly hasM?: boolean;
  readonly hasZ?: boolean;
  last?: Coordinate;
  readonly measures?: number;
  readonly mOrdinateIndex?: number;
  ordinates?: Ordinates;
  readonly spatial?: number;
  readonly zOrdinateIndex?: number;
}

export interface CoordinateEqualityComparer { [key: string]: any }

export interface Coordinate {
  coordinateValue?: Coordinate;
  readonly isValid?: boolean;
  m?: number;
  x?: number;
  y?: number;
  z?: number;
}

export interface Point {
  readonly area?: number;
  boundary?: Geometry;
  boundaryDimension?: Dimension;
  centroid?: Point;
  coordinate?: Coordinate;
  readonly coordinates?: readonly Coordinate[] | null;
  coordinateSequence?: CoordinateSequence;
  dimension?: Dimension;
  envelope?: Geometry;
  envelopeInternal?: Envelope;
  factory?: GeometryFactory;
  readonly geometryType?: string | null;
  interiorPoint?: Point;
  readonly isEmpty?: boolean;
  readonly isRectangle?: boolean;
  readonly isSimple?: boolean;
  readonly isValid?: boolean;
  readonly length?: number;
  m?: number;
  readonly numGeometries?: number;
  readonly numPoints?: number;
  ogcGeometryType?: OgcGeometryType;
  pointOnSurface?: Point;
  precisionModel?: PrecisionModel;
  srid?: number;
  userData?: PointUserData;
  x?: number;
  y?: number;
  z?: number;
}

export interface CongestionTrackingOptions {
  endDate?: string;
  segmentId?: string | null;
  sourceId?: number;
  startDate?: string;
}

export interface CongestionTrackingDto {
  data?: SpeedDataDto[] | null;
  endDate?: string;
  endingMilePoint?: number;
  segmentId?: string;
  segmentName?: string | null;
  speedLimit?: number;
  startDate?: string;
  startingMilePoint?: number;
}

export interface AverageAndEightyFifthSeriesData {
  average?: DoubleDataPoint[] | null;
  eightyFifth?: Int64DataPoint[] | null;
}

