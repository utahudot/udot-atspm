#region license
// Copyright 2024 Utah Departement of Transportation
// for SqlDatabaseProvider - ATSPM.Infrastructure.SqlDatabaseProvider.Migrations/20231214004740_EFCore6Upgrade.Designer.cs
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
#endregion

// <auto-generated />
using System;
using Utah.Udot.Atspm.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ATSPM.Infrastructure.SqlDatabaseProvider.Migrations
{
    [DbContext(typeof(SpeedContext))]
    [Migration("20231214004740_EFCore6Upgrade")]
    partial class EFCore6Upgrade
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Utah.Udot.Atspm.Data.Models.SpeedEvent", b =>
                {
                    b.Property<string>("DetectorId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Mph")
                        .HasColumnType("int");

                    b.Property<int>("Kph")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("DetectorId", "Mph", "Kph", "TimeStamp");

                    b.ToTable("SpeedEvents", t =>
                        {
                            t.HasComment("Speed Event Data");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
