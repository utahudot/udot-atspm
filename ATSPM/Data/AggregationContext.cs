// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using ATSPM.Data.Models;
using ATSPM.Data.Configuration;

namespace ATSPM.Data
{
    public partial class AggregationContext : DbContext
    {
        public AggregationContext()
        {
        }

        public AggregationContext(DbContextOptions<AggregationContext> options)
            : base(options)
        {
        }

        public virtual DbSet<ApproachPcdAggregation> ApproachPcdAggregations { get; set; }
        public virtual DbSet<ApproachSpeedAggregation> ApproachSpeedAggregations { get; set; }
        public virtual DbSet<ApproachSplitFailAggregation> ApproachSplitFailAggregations { get; set; }
        public virtual DbSet<ApproachYellowRedActivationAggregation> ApproachYellowRedActivationAggregations { get; set; }
        public virtual DbSet<DetectorEventCountAggregation> DetectorEventCountAggregations { get; set; }
        public virtual DbSet<PhaseCycleAggregation> PhaseCycleAggregations { get; set; }
        public virtual DbSet<PhaseLeftTurnGapAggregation> PhaseLeftTurnGapAggregations { get; set; }
        public virtual DbSet<PhaseSplitMonitorAggregation> PhaseSplitMonitorAggregations { get; set; }
        public virtual DbSet<PhaseTerminationAggregation> PhaseTerminationAggregations { get; set; }
        public virtual DbSet<PreemptionAggregation> PreemptionAggregations { get; set; }
        public virtual DbSet<PriorityAggregation> PriorityAggregations { get; set; }
        public virtual DbSet<SignalEventCountAggregation> SignalEventCountAggregations { get; set; }
        public virtual DbSet<SignalPlanAggregation> SignalPlanAggregations { get; set; }

        //TODO: need to remove date overrides from Configurations and redo EFCore6Upgrade migration
        protected override void ConfigureConventions(ModelConfigurationBuilder configurationBuilder)
        {
            configurationBuilder.Properties<string>().AreUnicode(false);
            configurationBuilder.Properties<DateTime>().HaveColumnType("datetime");
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.ApplyConfiguration(new ApproachPcdAggregationConfiguration());

            modelBuilder.ApplyConfiguration(new ApproachSpeedAggregationConfiguration());

            modelBuilder.ApplyConfiguration(new ApproachSplitFailAggregationConfiguration());

            modelBuilder.ApplyConfiguration(new ApproachYellowRedActivationAggregationConfiguration());

            modelBuilder.ApplyConfiguration(new DetectorEventCountAggregationConfiguration());

            modelBuilder.ApplyConfiguration(new PhaseCycleAggregationConfiguration());

            modelBuilder.ApplyConfiguration(new PhaseLeftTurnGapAggregationConfiguration());

            modelBuilder.ApplyConfiguration(new PhaseSplitMonitorAggregationConfiguration());

            modelBuilder.ApplyConfiguration(new PhaseTerminationAggregationConfiguration());

            modelBuilder.ApplyConfiguration(new PreemptionAggregationConfiguration());

            modelBuilder.ApplyConfiguration(new PriorityAggregationConfiguration());

            modelBuilder.ApplyConfiguration(new SignalEventCountAggregationConfiguration());

            modelBuilder.ApplyConfiguration(new SignalPlanAggregationConfiguration());

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}