#region license
// Copyright 2024 Utah Departement of Transportation
// for Data - Utah.Udot.Atspm.Data.Models/Approach.cs
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
#endregion

// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Utah.Udot.Atspm.Data.Enums;
using Utah.Udot.Atspm.Data.Relationships;

namespace Utah.Udot.Atspm.Data.Models
{
    /// <summary>
    /// Approach
    /// </summary>
    public partial class Approach : AtspmConfigModelBase<int>, IRelatedLocation, IRelatedDirectionType, IRelatedDetectors
    {
        /// <summary>
        /// Approach description
        /// </summary>
        public string Description { get; set; }

        /// <summary>
        /// Mph of approach
        /// </summary>
        public int? Mph { get; set; }

        //TODO: name these better

        /// <summary>
        /// ProtectedPhaseNumber
        /// </summary>
        public int ProtectedPhaseNumber { get; set; }

        /// <summary>
        /// IsProtectedPhaseOverlap
        /// </summary>
        public bool IsProtectedPhaseOverlap { get; set; }

        /// <summary>
        /// PermissivePhaseNumber
        /// </summary>
        public int? PermissivePhaseNumber { get; set; }

        /// <summary>
        /// IsPermissivePhaseOverlap
        /// </summary>
        public bool IsPermissivePhaseOverlap { get; set; }

        /// <summary>
        /// PedestrianPhaseNumber
        /// </summary>
        public int? PedestrianPhaseNumber { get; set; }

        /// <summary>
        /// IsPedestrianPhaseOverlap
        /// </summary>
        public bool IsPedestrianPhaseOverlap { get; set; }

        /// <summary>
        /// PedestrianDetectors
        /// </summary>
        public string PedestrianDetectors { get; set; }

        #region IRelatedLocation

        /// <inheritdoc/>
        public int LocationId { get; set; }

        /// <inheritdoc/>
        public virtual Location Location { get; set; }

        #endregion

        #region IRelatedDirectionType

        /// <inheritdoc/>
        public DirectionTypes DirectionTypeId { get; set; }

        /// <inheritdoc/>
        public virtual DirectionType DirectionType { get; set; }

        #endregion

        #region IRelatedDetectors

        /// <inheritdoc/>
        public virtual ICollection<Detector> Detectors { get; set; } = new HashSet<Detector>();

        #endregion

        /// <inheritdoc/>
        public override string ToString() => $"{Id} - {Description} - {DirectionTypeId}";
    }
}