// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using ATSPM.Data.Enums;
using ATSPM.Data.Models.ConfigurationModels;
using ATSPM.Data.Relationships;

namespace ATSPM.Data.Models
{
    /// <summary>
    /// Device configuration
    /// </summary>
    public partial class DeviceConfiguration : AtspmConfigModelBase<int>, IRelatedDevices, IRelatedProduct
    {
        /// <summary>
        /// Firmware version
        /// </summary>
        public string Firmware { get; set; }

        /// <summary>
        /// Configuration notes
        /// </summary>
        public string Notes { get; set; }

        /// <summary>
        /// Transport protocol for controller logging
        /// </summary>
        public TransportProtocols Protocol { get; set; }

        /// <summary>
        /// Logging communication port
        /// </summary>
        public long Port { get; set; }

        /// <summary>
        /// Path to log directory
        /// </summary>
        public string Directory { get; set; }

        /// <summary>
        /// Log search term to find log in directory
        /// Can be a query string or file extension
        /// </summary>
        public string[] SearchTerms { get; set; }

        /// <summary>
        /// Device connection timeout in milliseconds
        /// </summary>
        public int ConnectionTimeout { get; set; }

        /// <summary>
        /// Device operation timeout in milliseconds
        /// </summary>
        public int OperationTimout { get; set; }

        /// <summary>
        /// The object and assembly used to model the event data
        /// </summary>
        public Type DataModel { get; set; }

        /// <summary>
        /// Username
        /// </summary>
        public string UserName { get; set; }

        /// <summary>
        /// Password
        /// </summary>
        public string Password { get; set; }

        #region IRelatedProduct

        /// <inheritdoc/>
        public int? ProductId { get; set; }

        /// <inheritdoc/>
        public virtual Product? Product { get; set; }

        #endregion

        #region IRelatedDevices

        /// <inheritdoc/>
        public virtual ICollection<Device> Devices { get; set; } = new HashSet<Device>();

        #endregion

        /// <inheritdoc/>
        public override string ToString() => $"{Id} - {Firmware} - {Product}";
    }
}