// <auto-generated />
using System;
using ATSPM.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ATSPM.Infrasturcture.Migrations
{
    [DbContext(typeof(ConfigContext))]
    [Migration("20220817141903_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AreaSignal", b =>
                {
                    b.Property<int>("AreasId")
                        .HasColumnType("int");

                    b.Property<int>("SignalsId")
                        .HasColumnType("int");

                    b.HasKey("AreasId", "SignalsId");

                    b.HasIndex("SignalsId");

                    b.ToTable("AreaSignal");
                });

            modelBuilder.Entity("ATSPM.Data.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Areas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Unknown"
                        });
                });

            modelBuilder.Entity("ATSPM.Data.Models.ControllerType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("ActiveFtp")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ftpdirectory")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Snmpport")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ControllerTypes");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            ActiveFtp = false,
                            Description = "Unknown",
                            Ftpdirectory = "root",
                            Password = "password",
                            Snmpport = 0L,
                            UserName = "user"
                        });
                });

            modelBuilder.Entity("ATSPM.Data.Models.Jurisdiction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CountyParish")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Mpo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OtherPartners")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Jurisdictions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountyParish = "Unknown",
                            Name = "Unknown",
                            OtherPartners = "Unknown"
                        });
                });

            modelBuilder.Entity("ATSPM.Data.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Unknown"
                        });
                });

            modelBuilder.Entity("ATSPM.Data.Models.Signal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ControllerTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Ipaddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasDefaultValueSql("('127.0.0.1')");

                    b.Property<int>("JurisdictionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasDefaultValueSql("('Initial')");

                    b.Property<bool>("Pedsare1to1")
                        .HasColumnType("bit");

                    b.Property<string>("PrimaryName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("SecondaryName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SignalId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime");

                    b.Property<int>("VersionActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((10))");

                    b.HasKey("Id");

                    b.HasIndex("ControllerTypeId");

                    b.HasIndex("JurisdictionId");

                    b.HasIndex("RegionId");

                    b.HasIndex("VersionActionId");

                    b.ToTable("Signals");
                });

            modelBuilder.Entity("ATSPM.Data.Models.VersionAction", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VersionActions");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Description = "Unknown"
                        },
                        new
                        {
                            Id = 1,
                            Description = "New"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Edit"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Delete"
                        },
                        new
                        {
                            Id = 4,
                            Description = "NewVersion"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Initial"
                        });
                });

            modelBuilder.Entity("AreaSignal", b =>
                {
                    b.HasOne("ATSPM.Data.Models.Area", null)
                        .WithMany()
                        .HasForeignKey("AreasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATSPM.Data.Models.Signal", null)
                        .WithMany()
                        .HasForeignKey("SignalsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ATSPM.Data.Models.Signal", b =>
                {
                    b.HasOne("ATSPM.Data.Models.ControllerType", "ControllerType")
                        .WithMany("Signals")
                        .HasForeignKey("ControllerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATSPM.Data.Models.Jurisdiction", "Jurisdiction")
                        .WithMany("Signals")
                        .HasForeignKey("JurisdictionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATSPM.Data.Models.Region", "Region")
                        .WithMany("Signals")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATSPM.Data.Models.VersionAction", "VersionAction")
                        .WithMany()
                        .HasForeignKey("VersionActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControllerType");

                    b.Navigation("Jurisdiction");

                    b.Navigation("Region");

                    b.Navigation("VersionAction");
                });

            modelBuilder.Entity("ATSPM.Data.Models.ControllerType", b =>
                {
                    b.Navigation("Signals");
                });

            modelBuilder.Entity("ATSPM.Data.Models.Jurisdiction", b =>
                {
                    b.Navigation("Signals");
                });

            modelBuilder.Entity("ATSPM.Data.Models.Region", b =>
                {
                    b.Navigation("Signals");
                });
#pragma warning restore 612, 618
        }
    }
}
