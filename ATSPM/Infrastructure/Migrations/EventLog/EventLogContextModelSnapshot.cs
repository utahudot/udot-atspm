// <auto-generated />
using System;
using ATSPM.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ATSPM.Infrastructure.Migrations.EventLog
{
    [DbContext(typeof(EventLogContext))]
    partial class EventLogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ATSPM.Data.Models.ControllerEventLog", b =>
                {
                    b.Property<string>("SignalId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("SignalID");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime");

                    b.Property<int>("EventCode")
                        .HasColumnType("int");

                    b.Property<int>("EventParam")
                        .HasColumnType("int");

                    b.HasKey("SignalId", "Timestamp", "EventCode", "EventParam");

                    b.ToTable("Controller_Event_Log", (string)null);

                    b.HasComment("Old Log Data Table");
                });

            modelBuilder.Entity("ATSPM.Data.Models.ControllerLogArchive", b =>
                {
                    b.Property<string>("SignalId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("ArchiveDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("LogData")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("SignalId", "ArchiveDate");

                    b.ToTable("ControllerLogArchives");

                    b.HasComment("Compressed Event Log Data");
                });
#pragma warning restore 612, 618
        }
    }
}
