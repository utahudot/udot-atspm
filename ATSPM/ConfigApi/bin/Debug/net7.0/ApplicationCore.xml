<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApplicationCore</name>
    </assembly>
    <members>
        <member name="P:ATSPM.Application.Analysis.ApproachDelay.ApproachDelayResult.SignalIdentifier">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.ApproachDelay.ApproachDelayResult.PhaseNumber">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.ApproachDelay.ApproachDelayResult.AverageDelay">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.ApproachDelay.ApproachDelayResult.TotalDelay">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.ApproachDelay.ApproachDelayResult.Vehicles">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.Common.CycleArrivals">
            <summary>
            A cycle with <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOn"/> event arrivals
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.CycleArrivals.SignalIdentifier">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.CycleArrivals.PhaseNumber">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.CycleArrivals.TotalGreenTime">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.CycleArrivals.TotalYellowTime">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.CycleArrivals.TotalRedTime">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.CycleArrivals.TotalTime">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.CycleArrivals.TotalArrivalOnGreen">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.CycleArrivals.TotalArrivalOnYellow">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.CycleArrivals.TotalArrivalOnRed">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.CycleArrivals.Vehicles">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.CycleArrivals.TotalDelay">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.CycleArrivals.TotalVolume">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.Common.IApproachDelay">
            <summary>
            Defines the approach delay results
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.IApproachDelay.AverageDelay">
            <summary>
            The average delay of <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOn"/> arrival on red events
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.IApproachDelay.TotalDelay">
            <summary>
            The total delay of <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOn"/> arrival on red events
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.IApproachDelay.Vehicles">
            <summary>
            <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOn"/> arrival on red events
            </summary>
        </member>
        <member name="T:ATSPM.Application.Analysis.Common.ICycle">
            <summary>
            Defines the start and end of a red to red cycle
            which is the time between two <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseEndYellowChange"/> events including
            <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseBeginGreen"/> and <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseBeginYellowChange"/>
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.ICycle.TotalGreenTime">
            <summary>
            The total green time is defined as the time from start of <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseBeginGreen"/> to the start of <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseBeginYellowChange"/> in seconds
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.ICycle.TotalYellowTime">
            <summary>
            The total yellow time is defined as the time from start of <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseBeginYellowChange"/> to the second <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseEndYellowChange"/> in seconds
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.ICycle.TotalRedTime">
            <summary>
            The total red time is defined as the first <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseEndYellowChange"/> to the <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseBeginGreen"/> in seconds
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.ICycle.TotalTime">
            <summary>
            The total time is defined as the time between the first and second <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseEndYellowChange"/> in seconds
            </summary>
        </member>
        <member name="T:ATSPM.Application.Analysis.Common.ICycleArrivals">
            <summary>
            Defines <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOn"/> event arrivals for cycle
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.ICycleArrivals.TotalArrivalOnGreen">
            <summary>
            Total number of <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOn"/> events arriving on green
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.ICycleArrivals.TotalArrivalOnYellow">
            <summary>
            Total number of <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOn"/> events arriving on yellow
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.ICycleArrivals.TotalArrivalOnRed">
            <summary>
            Total number of <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOn"/> events arriving on yellow
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.ICycleArrivals.Vehicles">
            <summary>
            <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOn"/> events arriving during cycle
            </summary>
        </member>
        <member name="T:ATSPM.Application.Analysis.Common.ICycleRatios">
            <summary>
            Defines <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOn"/> event arrival ratios for cycle
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.ICycleRatios.PercentArrivalOnGreen">
            <summary>
            The percentage of total green arrivals vs total volume
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.ICycleRatios.PercentArrivalOnYellow">
            <summary>
            The percentage of total yellow arrivals vs total volume
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.ICycleRatios.PercentArrivalOnRed">
            <summary>
            The percentage of total red arrivals vs total volume
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.ICycleRatios.PercentGreen">
            <summary>
            The percentage of green time vs total time
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.ICycleRatios.PercentYellow">
            <summary>
            The percentage of yellow time vs total time
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.ICycleRatios.PercentRed">
            <summary>
            The percentage of red time vs total time
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.ICycleRatios.PlatoonRatio">
            <summary>
            The proportion of arrivals on green vs green time
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.ICycleRatios.ArrivalCycles">
            <summary>
            <see cref="T:ATSPM.Application.Analysis.Common.ICycleArrivals"/> that are used to derrive the <see cref="T:ATSPM.Application.Analysis.Common.ICycleRatios"/>
            </summary>
        </member>
        <member name="T:ATSPM.Application.Analysis.Common.ICycleVolume">
            <summary>
            Defines <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOn"/> event volume information for cycles
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.ICycleVolume.TotalDelay">
            <summary>
            The total delay of <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOn"/> events
            arriving on red before a <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseBeginGreen"/> event
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.ICycleVolume.TotalVolume">
            <summary>
            The total amount of <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOn"/> events with corrected timestamps
            arriving within cycle
            </summary>
        </member>
        <member name="T:ATSPM.Application.Analysis.Common.RedToRedCycle">
            <summary>
            A cycle which is the time between two <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseEndYellowChange"/> events including
            <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseBeginGreen"/> and <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseBeginYellowChange"/>
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.RedToRedCycle.GreenEvent">
            <summary>
            Timestamp of <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseBeginGreen"/> event
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.RedToRedCycle.YellowEvent">
            <summary>
            Timestamp of <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseBeginYellowChange"/> event
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.RedToRedCycle.SignalIdentifier">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.RedToRedCycle.PhaseNumber">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.RedToRedCycle.TotalGreenTime">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.RedToRedCycle.TotalYellowTime">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.RedToRedCycle.TotalRedTime">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.RedToRedCycle.TotalTime">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.Common.RedToRedCycle.InRange(System.DateTime)">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.Vehicle.SignalIdentifier">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Common.Vehicle.PhaseNumber">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.Plans.ApproachDelayPlan">
            <summary>
            Plan specific to approach delay information
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.ApproachDelayPlan.AverageDelay">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.ApproachDelayPlan.TotalDelay">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.ApproachDelayPlan.Vehicles">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.Plans.ApproachDelayPlan.AssignToPlan``1(System.Collections.Generic.IEnumerable{``0})">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.Plans.IPlan">
            <summary>
            Definition for signal controller plans which are derrived from <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.CoordPatternChange"/> events
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.Plans.IPlan.AssignToPlan``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Tries to assign an <see cref="T:ATSPM.Domain.Common.IStartEndRange"/> object to the plan
            </summary>
            <param name="range"></param>
            <returns>Returns true if successful</returns>
        </member>
        <member name="T:ATSPM.Application.Analysis.Plans.Plan">
            <summary>
            Base for signal controller plans which are derrived from <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.CoordPatternChange"/> events
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.Plan.SignalIdentifier">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.Plan.PlanNumber">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.Plans.Plan.AssignToPlan``1(System.Collections.Generic.IEnumerable{``0})">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.Plans.PreemptPlan.AssignToPlan``1(System.Collections.Generic.IEnumerable{``0})">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.Plans.PurdueCoordinationPlan">
            <summary>
            Plan specific to purdue coordination information
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.PurdueCoordinationPlan.TotalGreenTime">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.PurdueCoordinationPlan.TotalYellowTime">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.PurdueCoordinationPlan.TotalRedTime">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.PurdueCoordinationPlan.TotalTime">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.PurdueCoordinationPlan.TotalArrivalOnGreen">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.PurdueCoordinationPlan.TotalArrivalOnYellow">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.PurdueCoordinationPlan.TotalArrivalOnRed">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.PurdueCoordinationPlan.Vehicles">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.PurdueCoordinationPlan.PercentArrivalOnGreen">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.PurdueCoordinationPlan.PercentArrivalOnYellow">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.PurdueCoordinationPlan.PercentArrivalOnRed">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.PurdueCoordinationPlan.PercentGreen">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.PurdueCoordinationPlan.PercentYellow">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.PurdueCoordinationPlan.PercentRed">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.PurdueCoordinationPlan.PlatoonRatio">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.PurdueCoordinationPlan.ArrivalCycles">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.PurdueCoordinationPlan.TotalDelay">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.Plans.PurdueCoordinationPlan.TotalVolume">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.Plans.PurdueCoordinationPlan.AssignToPlan``1(System.Collections.Generic.IEnumerable{``0})">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.Plans.PurdueCoordinationPlan.InRange(System.DateTime)">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.PreemptionDetails.PreempDetailValueBase.SignalIdentifier">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult">
            <summary>
            Purdue coordination results
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult.#ctor">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult.SignalIdentifier">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult.PhaseNumber">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult.TotalGreenTime">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult.TotalYellowTime">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult.TotalRedTime">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult.TotalTime">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult.TotalArrivalOnGreen">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult.TotalArrivalOnYellow">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult.TotalArrivalOnRed">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult.Vehicles">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult.PercentArrivalOnGreen">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult.PercentArrivalOnYellow">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult.PercentArrivalOnRed">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult.PercentGreen">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult.PercentYellow">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult.PercentRed">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult.PlatoonRatio">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult.ArrivalCycles">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult.TotalDelay">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult.TotalVolume">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.WorkflowBase`2">
            <summary>
            Used as a base to create complex, inter-linkable, parallel workflows
            </summary>
            <typeparam name="T1">Input data type</typeparam>
            <typeparam name="T2">Output data type</typeparam>
        </member>
        <member name="E:ATSPM.Application.Analysis.WorkflowBase`2.CanExecuteChanged">
            <inheritdoc/>
        </member>
        <member name="P:ATSPM.Application.Analysis.WorkflowBase`2.Steps">
            <summary>
            Used for tracking workflow step task completion results
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.WorkflowBase`2.Input">
            <summary>
            Can be used to post or send data or link from other workflows
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.WorkflowBase`2.Output">
            <summary>
            Can be used to recieve data or link to other workflows
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowBase`2.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowBase`2.InstantiateSteps">
            <summary>
            Instantiate workflow steps objects
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowBase`2.AddStepsToTracker">
            <summary>
            Add steps to <see cref="P:ATSPM.Application.Analysis.WorkflowBase`2.Steps"/> for step task tracking
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowBase`2.LinkSteps">
            <summary>
            Link workflow steps
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowBase`2.Execute(`0,System.IProgress{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowBase`2.CanExecute(`0)">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowBase`2.Execute(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.WorkflowFilters.FilteredCallStatus">
            <summary>
            Filters <see cref="T:ATSPM.Data.Models.ControllerEventLog"/> workflow events to
            <list type="bullet">
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseCallRegistered"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseCallDropped"/></item>
            </list>
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowFilters.FilteredCallStatus.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.WorkflowFilters.FilteredDetectorData">
            <summary>
            Filters <see cref="T:ATSPM.Data.Models.ControllerEventLog"/> workflow events to
            <list type="bullet">
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOff"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOn"/></item>
            </list>
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowFilters.FilteredDetectorData.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.WorkflowFilters.FilteredIndicationData">
            <summary>
            Filters <see cref="T:ATSPM.Data.Models.ControllerEventLog"/> workflow events to
            <list type="bullet">
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseBeginGreen"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseBeginRedClearance"/></item>
            </list>
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowFilters.FilteredIndicationData.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.WorkflowFilters.FilteredPedCalls">
            <summary>
            Filters <see cref="T:ATSPM.Data.Models.ControllerEventLog"/> workflow events to
            <list type="bullet">
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PedestrianCallRegistered"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PedDetectorOn"/></item>
            </list>
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowFilters.FilteredPedCalls.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.WorkflowFilters.FilteredPedPhaseData">
            <summary>
            Filters <see cref="T:ATSPM.Data.Models.ControllerEventLog"/> workflow events to
            <list type="bullet">
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PedestrianBeginWalk"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PedestrianBeginChangeInterval"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PedestrianOverlapBeginWalk"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PedestrianOverlapBeginClearance"/></item>
            </list>
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowFilters.FilteredPedPhaseData.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.WorkflowFilters.FilteredPedPhases">
            <summary>
            Filters <see cref="T:ATSPM.Data.Models.ControllerEventLog"/> workflow events to
            <list type="bullet">
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PedestrianBeginWalk"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PedestrianBeginSolidDontWalk"/></item>
            </list>
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowFilters.FilteredPedPhases.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.WorkflowFilters.FilteredPhaseIntervalChanges">
            <summary>
            Filters <see cref="T:ATSPM.Data.Models.ControllerEventLog"/> workflow events to
            <list type="bullet">
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseBeginGreen"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseBeginYellowChange"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseEndYellowChange"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseEndRedClearance"/></item>
            </list>
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowFilters.FilteredPhaseIntervalChanges.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.WorkflowFilters.FilteredPlanData">
            <summary>
            Filters <see cref="T:ATSPM.Data.Models.ControllerEventLog"/> workflow events to
            <list type="bullet">
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.CoordPatternChange"/></item>
            </list>
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowFilters.FilteredPlanData.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.WorkflowFilters.FilteredPreemptionData">
            <summary>
            Filters <see cref="T:ATSPM.Data.Models.ControllerEventLog"/> workflow events to
            <list type="bullet">
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PreemptCallInputOn"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PreemptGateDownInputReceived"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PreemptCallInputOff"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PreemptEntryStarted"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PreemptionBeginDwellService"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PreemptionMaxPresenceExceeded"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PreemptionBeginExitInterval"/></item>
            </list>
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowFilters.FilteredPreemptionData.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.WorkflowFilters.FilteredSplitsData">
            <summary>
            Filters <see cref="T:ATSPM.Data.Models.ControllerEventLog"/> workflow events to
            <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseBeginGreen"/> through <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.Split16Change"/>
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowFilters.FilteredSplitsData.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.WorkflowFilters.FilteredTerminations">
            <summary>
            Filters <see cref="T:ATSPM.Data.Models.ControllerEventLog"/> workflow events to
            <list type="bullet">
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseGapOut"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseMaxOut"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseForceOff"/></item>
            </list>
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowFilters.FilteredTerminations.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.WorkflowFilters.FilteredTerminationStatus">
            <summary>
            Filters <see cref="T:ATSPM.Data.Models.ControllerEventLog"/> workflow events to
            <list type="bullet">
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseGreenTermination"/></item>
            </list>
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowFilters.FilteredTerminationStatus.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.WorkflowFilters.FilteredTimingActuationData">
            <summary>
            Filters <see cref="T:ATSPM.Data.Models.ControllerEventLog"/> workflow events to
            <list type="bullet">
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseBeginGreen"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseMinComplete"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseMaxOut"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseEndYellowChange"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseEndRedClearance"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PedestrianBeginWalk"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PedestrianBeginChangeInterval"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PedestrianBeginSolidDontWalk"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.OverlapBeginGreen"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.OverlapBeginTrailingGreenExtension"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.OverlapBeginYellow"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.OverlapBeginRedClearance"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.OverlapOffInactivewithredindication"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PedestrianOverlapBeginWalk"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PedestrianOverlapBeginClearance"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PedestrianOverlapBeginSolidDontWalk"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOff"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOn"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PedDetectorOff"/></item>
            <item><see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PedDetectorOn"/></item>
            </list>
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowFilters.FilteredTimingActuationData.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.WorkflowFilters.FilterStepBase">
            <summary>
            Base class for filter controller event log data used in process workflows
            </summary>
        </member>
        <member name="F:ATSPM.Application.Analysis.WorkflowFilters.FilterStepBase.filteredList">
            <summary>
            List of filtered event codes
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowFilters.FilterStepBase.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.WorkflowSteps.CalculateVehicleArrivals">
            <summary>
            Creates a list of <see cref="T:ATSPM.Application.Analysis.Common.CycleArrivals"/>
            <list type="number">
            <listheader>Steps to create the <see cref="T:ATSPM.Application.Analysis.Common.CycleArrivals"/></listheader>
            
            <item>
            Identify <see cref="T:ATSPM.Application.Analysis.Common.CorrectedDetectorEvent"/> arriving durring the green stage of <see cref="T:ATSPM.Application.Analysis.Common.RedToRedCycle"/>
            </item>
            
            <item>
            Identify <see cref="T:ATSPM.Application.Analysis.Common.CorrectedDetectorEvent"/> arriving durring the yellow stage of <see cref="T:ATSPM.Application.Analysis.Common.RedToRedCycle"/>
            </item>
            
            <item>
            Identify <see cref="T:ATSPM.Application.Analysis.Common.CorrectedDetectorEvent"/> arriving durring the red stage of <see cref="T:ATSPM.Application.Analysis.Common.RedToRedCycle"/>
            </item>
            
            </list>
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowSteps.CalculateVehicleArrivals.#ctor(System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowSteps.CalculateVehicleArrivals.Process(System.Tuple{System.Collections.Generic.IEnumerable{ATSPM.Application.Analysis.Common.CorrectedDetectorEvent},System.Collections.Generic.IEnumerable{ATSPM.Application.Analysis.Common.RedToRedCycle}},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.WorkflowSteps.CreateRedToRedCycles">
            <summary>
            Creates a list of <see cref="T:ATSPM.Application.Analysis.Common.RedToRedCycle"/>
            <list type="number">
            <listheader>Steps to create the <see cref="T:ATSPM.Application.Analysis.Common.RedToRedCycle"/></listheader>
            
            <item>
            <term>Identify the Beginning of Each Cycle</term>
            <description>
            The beginning of the cycle
            for a given phase is defined as the end of <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseEndYellowChange"/>. The
            event log is queried to find the records where the Event Code is 9. Each instance
            of <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseEndYellowChange"/> is indicated as the start of the cycle.
            </description>
            </item>
            
            <item>
            <term>Identify the Change to Green for Each Cycle</term>
            <description>
            During this step, the event log is queried to find the records where the Event Code <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseBeginGreen"/>.
            The duration from the beginning of the cycle to when the given phasechanges to green(total red interval)
            is calculated in reference to the first redevent (begin) of the cycle
            </description>
            </item>
            
            <item>
            <term>Identify the Change to Yellow for Each Cycle</term>
            <description>
            During this step, the event log is queried to find the record where the Event Code <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseBeginYellowChange"/>.
            The duration from the beginning of the cycle to when the given phase
            changes to yellow(total green interval) is calculated in reference to the first red event (begin) of the cycle
            </description>
            </item>
            
            <item>
            <term>Identify the Change to Red at the End of Each Cycle</term>
            <description>
            During this step, the event log is queried to find the records where the Event Code <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.PhaseEndYellowChange"/>. 
            The duration from the beginning of the cycle to when the given phase changes to red(yellow clearance interval)
            is calculated in reference to the firstred event (begin) of the cycle
            </description>
            </item>
            
            </list>
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowSteps.CreateRedToRedCycles.#ctor(System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowSteps.CreateRedToRedCycles.Process(System.Collections.Generic.IEnumerable{ATSPM.Data.Models.ControllerEventLog},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.WorkflowSteps.GeneratePurdueCoordinationResult">
            <summary>
            Generates the <see cref="T:ATSPM.Application.Analysis.PurdueCoordination.PurdueCoordinationResult"/> from a list of <see cref="T:ATSPM.Application.Analysis.Common.CycleArrivals"/>
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowSteps.GeneratePurdueCoordinationResult.#ctor(System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowSteps.GeneratePurdueCoordinationResult.Process(System.Collections.Generic.IReadOnlyList{ATSPM.Application.Analysis.Common.CycleArrivals},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.WorkflowSteps.IdentifyandAdjustVehicleActivations">
            <summary>
            <c>Identify and Adjust Vehicle Actuations</c>
            During this step, the event log is queried to find detector activations for the subject phase
            (the records where the Event Code is <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOn"/> and Event Parameter is a detector channel assigned to the subject phase). 
            The timestamps of the EC 82 events are noted.
            Timestamps for detector on events may need to be adjusted to represent vehicle arrivals at the stop bar
            rather than at the detector location or toadjust based on possible detector latency differences.
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowSteps.IdentifyandAdjustVehicleActivations.#ctor(System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.WorkflowSteps.IdentifyandAdjustVehicleActivations.Process(System.Collections.Generic.IEnumerable{System.Tuple{ATSPM.Data.Models.Detector,System.Collections.Generic.IEnumerable{ATSPM.Data.Models.ControllerEventLog}}},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.Workflows.ApproachDelayWorkflow">
            <summary>
            Vehicle delay is a measure that is commonly modeled by agencies to identify 
            whether intersection operations are acceptable.Using high-resolution data, this
            measure can be computed directly.For locations with high delay, particularly at
            uncongested locations, signal timing adjustments can help reduce wait times (1).
            Approach delay is a measure that integrates individual vehicle delay with
            volume to get an estimated sum of all vehicle delay on an approach.
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.Workflows.ApproachDelayWorkflow.InstantiateSteps">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.Workflows.ApproachDelayWorkflow.AddStepsToTracker">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.Workflows.ApproachDelayWorkflow.LinkSteps">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.Workflows.ApproachVolumeWorkflow">
             <summary>
             Volume data can be useful when programming signal timing values or 
             troubleshooting detection issues and is also often collected for planning
             purposes.This measure reports the number of vehicles observed on an approach
            (1). The number of vehicles is normalized to a flow rate(in vehicles per hour).
            The data may be aggregated into custom-sized bins, with 15 minutes being the default.
             </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.Workflows.ApproachVolumeWorkflow.InstantiateSteps">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.Workflows.ApproachVolumeWorkflow.AddStepsToTracker">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.Workflows.ApproachVolumeWorkflow.LinkSteps">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.Workflows.PhaseCycle.#ctor(System.String,System.Int32,System.DateTime)">
            <summary>
                Phase Objects primarily for the split monitor and terminaiton chart
            </summary>
            <param name="signalid"></param>
            <param name="phasenumber"></param>
            <param name="starttime"></param>
        </member>
        <member name="P:ATSPM.Application.Analysis.Workflows.PreemptCycle.StartInputOn">
            <summary>
            102
            </summary>
        </member>
        <member name="P:ATSPM.Application.Analysis.Workflows.PreemptCycle.GateDown">
            <summary>
            start of cycle, either from 102 or 105
            </summary>
        </member>
        <member name="T:ATSPM.Application.Analysis.Workflows.PreemptionDetailsWorkflow">
            <summary>
            Preemption is the interruption of normal operations to serve a preferred 
            vehicle(e.g., train, emergency vehicle). This measure can be used to determine if 
            preemption events are occurring as intended. “Preemption Details” refers to the
            duration of preemption intervals for each preemption event. The type of interval
            information available depends on the type of preempt (i.e., rail or emergency
            vehicle) and the availability of certain inputs. Some potential intervals that can be
            tracked include entry delay, track clearance, gate down, dwell, time to service, 
            max-out, and preempt input on/off (1).
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.Workflows.PreemptionDetailsWorkflow.InstantiateSteps">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.Workflows.PreemptionDetailsWorkflow.AddStepsToTracker">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.Workflows.PreemptionDetailsWorkflow.LinkSteps">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.Analysis.Workflows.PurdueCoordinationWorkflow">
            <summary>
            The Purdue Coordination Diagram provides additional details on vehicle 
            arrivals during the cycle(e.g., during the green phase or red phase for each
            approach). The percent arrival on green, platoon ratio, and arrival type can help
            identify locations that would benefit from adjustments to signal timing(i.e., to
            cycle lengths, splits, offsets, and phase order), and the Purdue Coordination
            Diagram can help identify the values that should be chosen for those
            adjustments.It can also be used to monitor general intersection operations.With
            the cycle length being displayed in the diagram, this measure can be useful for 
            monitoring advanced applications such as traffic responsive or adaptive control
            (1). For Purdue Coordination Diagrams ATSPM defines the cycle from the
            beginning of the red interval to the beginning of the next red interval for the
            same phase.This measure can only be generated for approaches with advance
            detection.
            </summary>
        </member>
        <member name="M:ATSPM.Application.Analysis.Workflows.PurdueCoordinationWorkflow.InstantiateSteps">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.Workflows.PurdueCoordinationWorkflow.AddStepsToTracker">
            <inheritdoc/>
        </member>
        <member name="M:ATSPM.Application.Analysis.Workflows.PurdueCoordinationWorkflow.LinkSteps">
            <inheritdoc/>
        </member>
        <member name="T:ATSPM.Application.AtspmMath">
            <summary>
            Equations used in the ATSPM engine as defined by Measures and Assumptions
            </summary>
        </member>
        <member name="M:ATSPM.Application.AtspmMath.PeakHourFactor(System.Double,System.Double,System.Int32)">
            <summary>
            Calculates the Peak Hour Factor for Approach Volumes
            <list type="bullet">
            <listheader>Used in the following steps of Approach Volume:</listheader>
            <item>
            <term>Equation 3</term>
            <description>Step 3: Calculate Peak Hour Factor</description>
            </item>
            </list>
            </summary>
            <param name="peakHourVolume">Peak vehicle volume hour</param>
            <param name="peakBinVolume">Peak vehicle volume per bin</param>
            <param name="binSize">Bin size to break up hours</param>
            <returns></returns>
        </member>
        <member name="M:ATSPM.Application.AtspmMath.TimeSpanFromConsecutiveCodes(System.Collections.Generic.IEnumerable{ATSPM.Data.Models.ControllerEventLog},ATSPM.Data.Enums.DataLoggerEnum,ATSPM.Data.Enums.DataLoggerEnum)">
            <summary>
            Calculates the <see cref="T:System.TimeSpan"/> difference between the first and second <see cref="T:ATSPM.Data.Enums.DataLoggerEnum"/>
            <list type="bullet">
            <listheader>Used in the following steps of Preemption Details:</listheader>
            <item>
            <term>Equation 52</term>
            <description>Step 1: Calculate Dwell Time</description>
            </item>
            <item>
            <term>Equation 53</term>
            <description>Step 2: Calculate Track Clear Time</description>
            </item>
            <item>
            <term>Equation 54</term>
            <description>Step 3: Calculate Time to Service</description>
            </item>
            <item>
            <term>Equation 55</term>
            <description>Step 4: Calculate Delay</description>
            </item>
            <item>
            <term>Equation 56</term>
            <description>Step 5: Calculate Time to Gate Down</description>
            </item>
            <item>
            <term>Equation 57</term>
            <description>Step 6: Calculate Time to Call Max Out</description>
            </item>
            </list>
            </summary>
            <param name="items"><see cref="T:ATSPM.Data.Models.ControllerEventLog"/> list the <see cref="T:ATSPM.Data.Enums.DataLoggerEnum"/> are sorted</param>
            <param name="first">Starting event code</param>
            <param name="second">Ending event code</param>
            <returns><see cref="T:System.TimeSpan"/> difference of <paramref name="second"/> minus <paramref name="first"/></returns>
        </member>
        <member name="M:ATSPM.Application.AtspmMath.AdjustTimeStamp(System.DateTime,System.Int32,System.Int32,System.Double)">
            <summary>
            Identify and Adjust Vehicle Activations
            <list type="bullet">
            <listheader>Used in the following Measures and Assumptions:</listheader>
            <item>
            <term>Equation 1</term>
            <description>Used in step 1 of Approach Volume</description>
            </item>
            <item>
            <term>Equation 27</term>
            <description>Used in step 1 of Approach Delay</description>
            </item>
            <item>
            <term>Equation 44</term>
            <description>Used in step 1 of Purdue Coordination Diagram</description>
            </item>
            <item>
            <term>Equation 64</term>
            <description>Used in step 1 of Arrivals on Red</description>
            </item>
            </list>
            </summary>
            <param name="timestamp">time stamp of arrival time (EC 82)</param>
            <param name="approachSpeed">stated speed for the approach</param>
            <param name="distanceFromStopBar">stated distance to stop bar</param>
            <param name="latencyCorrection">latency correction, based on system latency factors</param>
            <returns>adjusted time stamp of arrival time</returns>
        </member>
        <member name="T:ATSPM.Application.Common.OpposingDirection">
            <summary>
            Used to obtain opposing phase directions
            </summary>
        </member>
        <member name="M:ATSPM.Application.Common.OpposingDirection.op_Implicit(ATSPM.Application.Common.OpposingDirection)~ATSPM.Data.Enums.DirectionTypes">
            <summary>
            Used when converting <see cref="T:ATSPM.Data.Enums.DirectionTypes"/> to <see cref="T:ATSPM.Application.Common.OpposingDirection"/>
            and returns the opposing phase
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:ATSPM.Application.Common.OpposingDirection.op_Explicit(ATSPM.Data.Enums.DirectionTypes)~ATSPM.Application.Common.OpposingDirection">
            <summary>
            Used when converting <see cref="T:ATSPM.Application.Common.OpposingDirection"/> to <see cref="T:ATSPM.Data.Enums.DirectionTypes"/>
            and returns the opposing phase
            </summary>
            <param name="o"></param>
        </member>
        <member name="T:ATSPM.Application.Enums.ArrivalType">
            <summary>
            Arrival type of <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOn"/> events
            </summary>
        </member>
        <member name="F:ATSPM.Application.Enums.ArrivalType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:ATSPM.Application.Enums.ArrivalType.ArrivalOnGreen">
            <summary>
            <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOn"/> arrival on green
            </summary>
        </member>
        <member name="F:ATSPM.Application.Enums.ArrivalType.ArrivalOnYellow">
            <summary>
            <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOn"/> arrival on yellow
            </summary>
        </member>
        <member name="F:ATSPM.Application.Enums.ArrivalType.ArrivalOnRed">
            <summary>
            <see cref="F:ATSPM.Data.Enums.DataLoggerEnum.DetectorOn"/> arrival on red
            </summary>
        </member>
        <member name="M:ATSPM.Application.Exceptions.ATSPMException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the System.Exception class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:ATSPM.Application.Exceptions.ATSPMException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the System.Exception class with a specified error
            message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference</param>
        </member>
        <member name="M:ATSPM.Application.Extensions.SignalRepositoryExtensions.CopySignalToNewVersion(ATSPM.Application.Repositories.ISignalRepository,System.Int32)">
            <summary>
            Copies <see cref="T:ATSPM.Data.Models.Signal"/> and associated <see cref="T:ATSPM.Data.Models.Approach"/> to new version
            and archives old version
            </summary>
            <param name="repo"></param>
            <param name="id">Signal version to copy</param>
            <returns>New version of copied <see cref="T:ATSPM.Data.Models.Signal"/></returns>
        </member>
        <member name="M:ATSPM.Application.Extensions.SignalRepositoryExtensions.SetSignalToDeleted(ATSPM.Application.Repositories.ISignalRepository,System.Int32)">
            <summary>
            Marks <see cref="T:ATSPM.Data.Models.Signal"/> to deleted
            </summary>
            <param name="repo"></param>
            <param name="id">Id of <see cref="T:ATSPM.Data.Models.Signal"/> to mark as deleted</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">id is not a valid signal</exception>
        </member>
        <member name="M:ATSPM.Application.Extensions.DetectorExtensions.CheckReportAvialbility(ATSPM.Data.Models.Detector,System.Int32)">
            <summary>
            Checks to see if <see cref="T:ATSPM.Data.Models.Detector"/>.<see cref="T:ATSPM.Data.Models.DetectionType"/> metrics contains <paramref name="metricId"/>
            </summary>
            <param name="detector"><see cref="T:ATSPM.Data.Models.Detector"/> whos <see cref="T:ATSPM.Data.Models.DetectionType"/> collection to check</param>
            <param name="metricId"><see cref="T:ATSPM.Data.Models.MetricType"/> id to match within <see cref="T:ATSPM.Data.Models.DetectionType"/> collection</param>
            <returns></returns>
        </member>
        <member name="T:ATSPM.Application.LogMessages.ControllerLoggerDecoderLogMessages.__DecodedLogsMessageStruct">
            <summary> This API supports the logging infrastructure and is not intended to be used directly from your code. It is subject to change in the future. </summary>
        </member>
        <member name="T:ATSPM.Application.LogMessages.ControllerLoggerDownloaderLogMessages.__GettingDirectoryListMessageStruct">
            <summary> This API supports the logging infrastructure and is not intended to be used directly from your code. It is subject to change in the future. </summary>
        </member>
        <member name="T:ATSPM.Application.LogMessages.ControllerLoggerDownloaderLogMessages.__DirectoryListingExceptionStruct">
            <summary> This API supports the logging infrastructure and is not intended to be used directly from your code. It is subject to change in the future. </summary>
        </member>
        <member name="T:ATSPM.Application.Repositories.IActionLogRepository">
            <summary>
            Action Log Repository
            </summary>
        </member>
        <member name="T:ATSPM.Application.Repositories.IApproachRepository">
            <summary>
            Approach Repository
            </summary>
        </member>
        <member name="T:ATSPM.Application.Repositories.IAreaRepository">
            <summary>
            Area Repository
            </summary>
        </member>
        <member name="T:ATSPM.Application.Repositories.IControllerEventLogRepository">
            <summary>
            Signal Controller Event Log Repository
            </summary>
        </member>
        <member name="M:ATSPM.Application.Repositories.IControllerEventLogRepository.GetSignalEventsBetweenDates(System.String,System.DateTime,System.DateTime)">
            <summary>
            Get all controller event logs by <c>SignalId</c> and date range
            </summary>
            <param name="signalId">Signal controller identifier</param>
            <param name="startTime">Start time</param>
            <param name="endTime">End time</param>
            <returns></returns>
        </member>
        <member name="T:ATSPM.Application.Repositories.IControllerTypeRepository">
            <summary>
            Signal Controller Type Repository
            </summary>
        </member>
        <member name="T:ATSPM.Application.Repositories.IDetectorCommentRepository">
            <summary>
            Detector Comment Repository
            </summary>
        </member>
        <member name="T:ATSPM.Application.Repositories.IDetectorRepository">
            <summary>
            Dectector Repository
            </summary>
        </member>
        <member name="M:ATSPM.Application.Repositories.IDetectorRepository.GetDetectorsBySignalIdMovementTypeIdDirectionTypeId(System.String,ATSPM.Data.Enums.DirectionTypes,System.Collections.Generic.List{ATSPM.Data.Enums.MovementTypes})">
            <summary>
            Gets a list of <see cref="T:ATSPM.Data.Models.Detector"/> that match <paramref name="directionType"/> and <paramref name="movementTypeIds"/>
            </summary>
            <param name="signalId">Don't know why but this isn't being used???</param>
            <param name="directionType">Direction type to match to <see cref="T:ATSPM.Data.Models.Detector"/></param>
            <param name="movementTypeIds">Movement type to match to <see cref="T:ATSPM.Data.Models.Detector"/></param>
            <returns></returns>
        </member>
        <member name="M:ATSPM.Application.Repositories.IDetectorRepository.GetMaximumDetectorChannel(System.Int32)">
            <summary>
            Get maximum detector channel from signal controller
            </summary>
            <param name="id">Signal controller id</param>
            <returns></returns>
        </member>
        <member name="T:ATSPM.Application.Repositories.IExternalLinksRepository">
            <summary>
            External Links Repository
            </summary>
        </member>
        <member name="T:ATSPM.Application.Repositories.IFaqRepository">
            <summary>
            Frequently Asked Quesions Repository
            </summary>
        </member>
        <member name="T:ATSPM.Application.Repositories.IJurisdictionRepository">
            <summary>
            Jurisdiction Repository
            </summary>
        </member>
        <member name="T:ATSPM.Application.Repositories.IMenuRepository">
            <summary>
            Menu Repository
            </summary>
        </member>
        <member name="T:ATSPM.Application.Repositories.IMetricCommentRepository">
            <summary>
            Metric Comment Repository
            </summary>
        </member>
        <member name="T:ATSPM.Application.Repositories.IMetricFilterTypesRepository">
            <summary>
            Metric Filter Type Repository
            <see cref="T:ATSPM.Data.Enums.MetricFilterTypes"/>
            </summary>
        </member>
        <member name="T:ATSPM.Application.Repositories.IMovementTypeRepository">
            <summary>
            Movement Type Repository
            </summary>
        </member>
        <member name="T:ATSPM.Application.Repositories.IRegionsRepository">
            <summary>
            Region Repository
            </summary>
        </member>
        <member name="T:ATSPM.Application.Repositories.IRoutePhaseDirectionRepository">
            <summary>
            Routed Phase Direction Repository
            </summary>
        </member>
        <member name="T:ATSPM.Application.Repositories.ISignalRepository">
            <summary>
            Signal Controller Repository
            </summary>
        </member>
        <member name="M:ATSPM.Application.Repositories.ISignalRepository.GetAllVersionsOfSignal(System.String)">
            <summary>
            Get all active <see cref="T:ATSPM.Data.Models.Signal"/> and related entities that match <paramref name="signalIdentifier"/>
            </summary>
            <param name="signalIdentifier">Signal controller identifier</param>
            <returns>List of <see cref="T:ATSPM.Data.Models.Signal"/> in decescing order of start date</returns>
        </member>
        <member name="M:ATSPM.Application.Repositories.ISignalRepository.GetLatestVersionOfAllSignals">
            <summary>
            Get latest version of all <see cref="T:ATSPM.Data.Models.Signal"/> and related entities
            </summary>
            <returns>List of <see cref="T:ATSPM.Data.Models.Signal"/> with newest start date</returns>
        </member>
        <member name="M:ATSPM.Application.Repositories.ISignalRepository.GetLatestVersionOfAllSignals(System.Int32)">
            <summary>
            Get latest version of all <see cref="T:ATSPM.Data.Models.Signal"/> and related entities by <see cref="T:ATSPM.Data.Models.ControllerType"/>
            </summary>
            <param name="controllerTypeId">Index of <see cref="T:ATSPM.Data.Models.ControllerType"/> to filter</param>
            <returns>List of <see cref="T:ATSPM.Data.Models.Signal"/> with newest start date</returns>
        </member>
        <member name="M:ATSPM.Application.Repositories.ISignalRepository.GetLatestVersionOfSignal(System.String)">
            <summary>
            Get latest version of <see cref="T:ATSPM.Data.Models.Signal"/> and related entities that match <paramref name="signalIdentifier"/>
            </summary>
            <param name="signalIdentifier">Signal controller identifier</param>
            <returns>Lastest <see cref="T:ATSPM.Data.Models.Signal"/> version</returns>
        </member>
        <member name="M:ATSPM.Application.Repositories.ISignalRepository.GetLatestVersionOfSignal(System.String,System.DateTime)">
            <summary>
            Get latest version of <see cref="T:ATSPM.Data.Models.Signal"/> and related entities that match <paramref name="signalIdentifier"/>
            and begin at or before <paramref name="startDate"/>
            </summary>
            <param name="signalIdentifier">Signal controller identifier</param>
            <param name="startDate">Starting date of Signal controllers</param>
            <returns>Lastest <see cref="T:ATSPM.Data.Models.Signal"/> version</returns>
        </member>
        <member name="M:ATSPM.Application.Repositories.ISignalRepository.GetSignalsBetweenDates(System.String,System.DateTime,System.DateTime)">
            <summary>
            Get all active <see cref="T:ATSPM.Data.Models.Signal"/> and related entities that match <paramref name="signalIdentifier"/>
            and start date is between <paramref name="startDate"/> and <paramref name="endDate"/>
            </summary>
            <param name="signalIdentifier">Signal controller identifier</param>
            <param name="startDate">Date controllers are older than</param>
            <param name="endDate">Date controllers are newer than</param>
            <returns>List of <see cref="T:ATSPM.Data.Models.Signal"/> in decescing order of start date</returns>
        </member>
        <member name="T:ATSPM.Application.Repositories.ISpeedEventRepository">
            <summary>
            Speed Event Repository
            </summary>
        </member>
        <member name="M:ATSPM.Application.Services.SignalControllerProtocols.ISignalControllerDecoder.DecodeAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)">
            <exception cref="!:ControllerLoggerDecoderException"></exception>
        </member>
        <member name="M:ATSPM.Application.ValueObjects.InfoBox.#ctor(System.String,System.String,System.Collections.Generic.SortedDictionary{System.Int32,System.Boolean})">
            <summary>
                Default constructor for the infobox class.
                Usually there will be one of these per pin.
            </summary>
            <param name="number"></param>
            <param name="loc"></param>
            <param name="reports"></param>
        </member>
        <member name="M:ATSPM.Application.ValueObjects.Pin.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
                Default Constructor Used for Map Pins
            </summary>
            <param name="number"></param>
            <param name="lat"></param>
            <param name="Long"></param>
            <param name="desc"></param>
            <param name="hasPCD"></param>
            <param name="hasSpeed"></param>
            <param name="hasPhase"></param>
            <param name="hasTMC"></param>
            <param name="Region"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ATSPM.Application.ValueObjects.Pin.FindReports(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" -->
    </members>
</doc>
