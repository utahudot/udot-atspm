name: Tag Version Bump

on:
  push:
    tags:
      - 'v*.*.*'       # Stable tags like v1.2.3
      - 'v*.*.*-*'     # Pre-release tags like v1.2.3-rc1, v2.0.0-beta

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version and tag type
        id: extract
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          VERSION="${TAG#v}"
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

          # Detect tag type
          if [[ "$VERSION" == *-* ]]; then
            echo "TAG_TYPE=prerelease" >> "$GITHUB_OUTPUT"
          else
            echo "TAG_TYPE=stable" >> "$GITHUB_OUTPUT"
          fi

      - name: Create release branch if needed
        id: release_branch
        run: |
          VERSION="${{ steps.extract.outputs.VERSION }}"
          MAJOR_MINOR=$(echo "$VERSION" | cut -d. -f1,2)
          RELEASE_BRANCH="release/$MAJOR_MINOR"

          # Check if branch exists remotely
          if git ls-remote --exit-code --heads origin "$RELEASE_BRANCH"; then
            echo "Release branch $RELEASE_BRANCH already exists."
            git checkout "$RELEASE_BRANCH"
          else
            echo "Creating release branch: $RELEASE_BRANCH"
            git checkout -b "$RELEASE_BRANCH"
            git push origin "$RELEASE_BRANCH"
          fi

          echo "RELEASE_BRANCH=$RELEASE_BRANCH" >> "$GITHUB_OUTPUT"

      - name: Update .csproj versions
        run: |
          VERSION="${{ steps.extract.outputs.VERSION }}"
          find . -name "*.csproj" | while read csproj; do
            echo "Updating $csproj to version $VERSION"
            sed -i 's|<Version>.*</Version>|<Version>'"$VERSION"'</Version>|' "$csproj"
          done

      - name: Commit changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git commit -am "Bump version to ${{ steps.extract.outputs.VERSION }}"

      - name: Push or create PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH="${{ steps.release_branch.outputs.RELEASE_BRANCH }}"
          VERSION="${{ steps.extract.outputs.VERSION }}"
          TAG_TYPE="${{ steps.extract.outputs.TAG_TYPE }}"

          # Check if branch is protected
          PROTECTED=$(gh api repos/${{ github.repository }}/branches/"$BRANCH" | jq -r '.protected')

          if [[ "$PROTECTED" == "true" ]]; then
            TEMP_BRANCH="version-sync/$VERSION"
            git checkout -b "$TEMP_BRANCH"
            git push origin "$TEMP_BRANCH"

            gh pr create \
              --title "Version bump to $VERSION" \
              --body "Automated bump from tag $VERSION ($TAG_TYPE)" \
              --base "$BRANCH" \
              --head "$TEMP_BRANCH"
          else
            git push origin HEAD:"$BRANCH"
          fi
